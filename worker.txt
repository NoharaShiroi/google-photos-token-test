export default {
  async fetch(request, env, ctx) {
    try {
      if (request.method !== "POST") {
        return new Response("Use POST", {
          status: 405,
          headers: {
            "Content-Type": "text/plain",
            "Access-Control-Allow-Origin": "*"
          }
        });
      }

      const reqBody = await request.json();
      const { code, redirect_uri } = reqBody;

      // 驗證參數
      if (!code || !redirect_uri) {
        return new Response(
          JSON.stringify({ error: "缺少 code 或 redirect_uri" }),
          {
            status: 400,
            headers: {
              "Content-Type": "application/json",
              "Access-Control-Allow-Origin": "*"
            }
          }
        );
      }

      const client_id = "1004388657829-mvpott95dsl5bapu40vi2n5li7i7t7d1.apps.googleusercontent.com";
      const client_secret = "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";

      const params = new URLSearchParams({
        code,
        client_id,
        client_secret,
        redirect_uri,
        grant_type: "authorization_code"
      });

      const tokenRes = await fetch("https://oauth2.googleapis.com/token", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        body: params
      });

      const data = await tokenRes.json();

      // 處理 Google 回傳錯誤（例如 invalid_grant）
      if (!tokenRes.ok) {
        return new Response(
          JSON.stringify({
            error: "Google token API 回傳錯誤",
            status: tokenRes.status,
            details: data
          }),
          {
            status: tokenRes.status,
            headers: {
              "Content-Type": "application/json",
              "Access-Control-Allow-Origin": "*"
            }
          }
        );
      }

      // 成功回傳 access_token 給前端
      return new Response(JSON.stringify(data), {
        status: 200,
        headers: {
          "Content-Type": "application/json",
          "Access-Control-Allow-Origin": "*"
        }
      });

    } catch (err) {
      return new Response(JSON.stringify({
        error: "Worker 內部錯誤",
        message: err.message
      }), {
        status: 500,
        headers: {
          "Content-Type": "application/json",
          "Access-Control-Allow-Origin": "*"
        }
      });
    }
  }
}
